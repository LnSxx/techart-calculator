{"version":3,"sources":["models.js","actions/actions.js","components/SelectBuildingButton/SelectBuildingButton.jsx","components/BuildingSelection/BuildingSelection.jsx","components/SetHeightCard/SetHeightCard.jsx","components/SelectMaterialButton/SelectMaterialButton.jsx","components/SelectMaterialCard/SelectMaterialCard.jsx","components/SetSizesCard/SetSizesCard.jsx","settings.js","components/PriceCalculationResu;t/SuccessCard/SuccessCard.jsx","components/PriceCalculationResu;t/FailCard/FailCard.jsx","components/PriceCalculationResu;t/ResultWaitingCard/ResultWaitingCard.jsx","components/PriceCalculationResu;t/PriceCalculationResult.jsx","components/PriceCalculationResu;t/calculatePrice.js","components/ErrorResponseCard/ErrorResponseCard.jsx","components/App/App.jsx","reducers/index.js","store/configureStore.js","index.jsx"],"names":["APP_STATES","materials","brick","name","id","cinderBlock","woodenBeam","metal","sandwichPanel","buildings","livingHouse","garage","ACTION_NAMES","selectLivingHouse","type","building","selectGarage","resetStore","SelectBuildingButton","selectAction","dispatch","useDispatch","justifyContent","colorScheme","size","variant","isFullWidth","onClick","BuildingSelection","stepNumber","useSelector","state","className","borderWidth","borderRadius","spacing","align","direction","padding","disabled","SetHeightCard","useState","entertedHeight","setEntertedHeight","maxW","defaultValue","min","onChange","valueAsString","valueAsNumber","payload","SelectMaterialButton","material","data","MaterialSelectionCard","selectedBuilding","map","SetSizesCard","enteredSizeX","setSizeX","enteredSizeY","setSizeY","alignItems","fontSize","sizeX","sizeY","settings","PRICE_CALCULATION_API","process","SuccessCard","priceCalculationResult","message","color","ResultWaitingCard","PriceCalculationResult","selectedNumberOfFloors","selectedMaterial","wallSizeX","wallSizeY","useEffect","height","a","axios","get","response","error","result","FailCard","ErrorResponseCard","priceCalculationFail","getRequiredCard","appStep","SelectMaterialCard","App","useColorMode","colorMode","toggleColorMode","step","initialState","store","createStore","action","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3ef4774b.chunk.js","sourcesContent":["export const APP_STATES = {\n  BUILDING_SELECTION: 'BUILDING_SELECTION',\n  HEIGHT_SETTING: 'HEIGHT_SETTING',\n  MATERIAL_SELECTION: 'MATERIAL_SELECTION',\n  SIZES_SETTING: 'SIZES_SETTING',\n  WAITING_FOR_PRICE_CALCULATION: 'WAITING_FOR_PRICE_CALCULATION',\n  PRICE_CALCULATION_SUCCESS: 'BACKEND_ANSWER_SUCCESS',\n  PRICE_CALCULATION_FAIL: 'BACKEND_ANSWER_FAIL',\n  CALCULATION_RESULT: 'CALCULATION_RESULT',\n};\n\nexport const materials = {\n  brick: {\n    name: 'Кирпич',\n    id: 1,\n  },\n  cinderBlock: {\n    name: 'Шлакоблок',\n    id: 2,\n  },\n  woodenBeam: {\n    name: 'Брус',\n    id: 3,\n  },\n  metal: {\n    name: 'Металл',\n    id: 4,\n  },\n  sandwichPanel: {\n    name: 'Сендвич-панель',\n    id: 5,\n  },\n};\n\nexport const buildings = {\n  livingHouse: {\n    name: 'Жилой дом',\n    id: 1,\n    materials: [materials.brick, materials.cinderBlock, materials.woodenBeam],\n  },\n  garage: {\n    name: 'Гараж',\n    id: 2,\n    materials: [materials.cinderBlock, materials.metal, materials.sandwichPanel],\n  },\n};\n","import { buildings } from '../models';\n\nexport const ACTION_NAMES = {\n  SELECT_LIVING_HOUSE: 'SELECT_LIVING_HOUSE',\n  SELECT_GARAGE: 'SELECT_GARAGE',\n  SET_HEIGHT: 'SET_HEIGHT',\n  SELECT_MATERIAL: 'SELECT_MATERIAL',\n  SET_SIZES: 'SET_SIZES',\n  PRICE_CALCULATION_SUCCESS: 'PRICE_CALCULATION_SUCCESS',\n  PRICE_CALCULATION_FAIL: 'PRICE_CALCULATION_FAIL',\n  RESET_STORE: 'RESET_STORE',\n};\n\nexport const selectLivingHouse = () => ({\n  type: ACTION_NAMES.SELECT_LIVING_HOUSE,\n  building: buildings.livingHouse,\n});\n\nexport const selectGarage = () => ({\n  type: ACTION_NAMES.SELECT_GARAGE,\n  building: buildings.garage,\n});\n\nexport const setHeight = (data) => ({\n  type: ACTION_NAMES.SET_HEIGHT,\n  payload: data,\n});\n\nexport const selectMaterial = (data) => ({\n  type: ACTION_NAMES.SELECT_MATERIAL,\n  payload: data,\n});\n\nexport const setSizes = (sizeX, sizeY) => ({\n  type: ACTION_NAMES.SET_SIZES,\n  sizeX,\n  sizeY,\n});\n\nexport const priceCalculationSuccess = (data) => ({\n  type: ACTION_NAMES.PRICE_CALCULATION_SUCCESS,\n  payload: data,\n});\n\nexport const priceCalculationFail = (error) => ({\n  type: ACTION_NAMES.PRICE_CALCULATION_FAIL,\n  payload: error,\n});\n\nexport const resetStore = () => ({\n  type: ACTION_NAMES.RESET_STORE,\n});\n","import React from 'react';\nimport { Button } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\n\nfunction SelectBuildingButton({ building, selectAction }) {\n  const dispatch = useDispatch();\n  return (\n    <Button\n      justifyContent=\"start\"\n      colorScheme=\"teal\"\n      size=\"md\"\n      variant=\"outline\"\n      isFullWidth=\"true\"\n      onClick={() => dispatch(selectAction())}\n    >\n      {building.name}\n    </Button>\n  );\n}\n\nSelectBuildingButton.propTypes = {\n  building: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.number,\n    materials: PropTypes.arrayOf(\n      PropTypes.shape({\n        name: PropTypes.string,\n        id: PropTypes.number,\n      }),\n    ),\n  }).isRequired,\n  selectAction: PropTypes.func.isRequired,\n};\n\nexport default SelectBuildingButton;\n","import { Box, Button, Stack } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetStore, selectGarage, selectLivingHouse } from '../../actions/actions';\nimport SelectBuildingButton from '../SelectBuildingButton/SelectBuildingButton';\nimport { buildings } from '../../models';\n\nfunction BuildingSelection() {\n  const dispatch = useDispatch();\n  const { stepNumber } = useSelector((state) => state);\n  return (\n    <>\n      <Box className=\"stepTitle\">\n        Шаг:\n        {stepNumber}\n      </Box>\n      <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\">\n        <div className=\"appInnerCardQuestion\">Что будем строить?</div>\n        <Stack spacing={4} align=\"start\" direction=\"column\">\n          <SelectBuildingButton building={buildings.livingHouse} selectAction={selectLivingHouse} />\n          <SelectBuildingButton building={buildings.garage} selectAction={selectGarage} />\n        </Stack>\n        <Stack\n          spacing={4}\n          align=\"center\"\n          direction=\"row\"\n          justifyContent=\"center\"\n          padding=\"10px\"\n        >\n          <Button\n            colorScheme=\"teal\"\n            size=\"md\"\n            variant=\"outline\"\n            onClick={() => { dispatch(resetStore()); }}\n          >\n            Отмена\n          </Button>\n          <Button colorScheme=\"teal\" size=\"md\" variant=\"solid\" disabled>\n            Далее\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default BuildingSelection;\n","import {\n  Box,\n  Button,\n  Stack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetStore, setHeight } from '../../actions/actions';\n\nfunction SetHeightCard() {\n  const [entertedHeight, setEntertedHeight] = useState(1);\n  const dispatch = useDispatch();\n  const { stepNumber } = useSelector((state) => state);\n  return (\n    <>\n      <Box className=\"stepTitle\">\n        Шаг:\n        {stepNumber}\n      </Box>\n      <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\">\n        <div className=\"appInnerCardQuestion\">Количество этажей (число)</div>\n        <Stack\n          justifyContent=\"center\"\n          direction=\"col\"\n        >\n          <NumberInput\n            size=\"lg\"\n            maxW={32}\n            defaultValue={1}\n            min={1}\n            onChange={(valueAsString, valueAsNumber) => { setEntertedHeight(valueAsNumber); }}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n        </Stack>\n        <Stack\n          spacing={4}\n          align=\"center\"\n          direction=\"row\"\n          justifyContent=\"center\"\n          padding=\"10px\"\n        >\n          <Button\n            colorScheme=\"teal\"\n            size=\"md\"\n            variant=\"outline\"\n            onClick={() => { dispatch(resetStore()); }}\n          >\n            Отмена\n          </Button>\n          <Button\n            colorScheme=\"teal\"\n            size=\"md\"\n            variant=\"solid\"\n            onClick={() => { dispatch(setHeight(entertedHeight)); }}\n          >\n            Далее\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default SetHeightCard;\n","import React from 'react';\nimport { Button } from '@chakra-ui/react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { selectMaterial } from '../../actions/actions';\n\nfunction SelectMaterialButton({ material }) {\n  const dispatch = useDispatch();\n  return (\n    <Button\n      justifyContent=\"start\"\n      colorScheme=\"teal\"\n      size=\"md\"\n      variant=\"outline\"\n      isFullWidth=\"true\"\n      onClick={() => dispatch(selectMaterial(material.id))}\n    >\n      {material.name}\n    </Button>\n  );\n}\n\nSelectMaterialButton.propTypes = {\n  material: PropTypes.shape({\n    name: PropTypes.string,\n    id: PropTypes.number,\n  }).isRequired,\n};\n\nexport default SelectMaterialButton;\n","import { Box, Button, Stack } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetStore } from '../../actions/actions';\nimport SelectMaterialButton from '../SelectMaterialButton/SelectMaterialButton';\n\nfunction MaterialSelectionCard() {\n  const dispatch = useDispatch();\n  const { selectedBuilding, stepNumber } = useSelector((state) => state);\n  return (\n    <>\n      <Box className=\"stepTitle\">\n        Шаг:\n        {stepNumber}\n      </Box>\n      <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\">\n        <div className=\"appInnerCardQuestion\">Материал стен:</div>\n        <Stack spacing={4} align=\"start\" direction=\"column\">\n          {selectedBuilding.materials.map((material) => (\n            <SelectMaterialButton\n              material={material}\n              key={material.id}\n            />\n          ))}\n        </Stack>\n        <Stack\n          spacing={4}\n          align=\"center\"\n          direction=\"row\"\n          justifyContent=\"center\"\n          padding=\"10px\"\n        >\n          <Button colorScheme=\"teal\" size=\"md\" variant=\"outline\" onClick={() => { dispatch(resetStore()); }}>\n            Отмена\n          </Button>\n          <Button colorScheme=\"teal\" size=\"md\" variant=\"solid\" disabled>\n            Далее\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default MaterialSelectionCard;\n","import {\n  Box,\n  Button,\n  Stack,\n  NumberInput,\n  NumberInputField,\n  NumberInputStepper,\n  NumberIncrementStepper,\n  NumberDecrementStepper,\n} from '@chakra-ui/react';\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetStore, setSizes } from '../../actions/actions';\n\nfunction SetSizesCard() {\n  const [enteredSizeX, setSizeX] = useState(1);\n  const [enteredSizeY, setSizeY] = useState(1);\n  const dispatch = useDispatch();\n  const { stepNumber } = useSelector((state) => state);\n  return (\n    <>\n      <Box className=\"stepTitle\">\n        Шаг:\n        {stepNumber}\n      </Box>\n      <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\">\n        <div className=\"appInnerCardQuestion\">Длина стен (в метрах)</div>\n        <Stack\n          justifyContent=\"center\"\n          alignItems=\"center\"\n          direction=\"row\"\n        >\n          <NumberInput\n            size=\"lg\"\n            maxW={32}\n            defaultValue={1}\n            min={1}\n            onChange={(valueAsString, valueAsNumber) => { setSizeX(valueAsNumber); }}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n          <Box fontSize=\"1.2em\">X</Box>\n          <NumberInput\n            size=\"lg\"\n            maxW={32}\n            defaultValue={1}\n            min={1}\n            onChange={(valueAsString, valueAsNumber) => { setSizeY(valueAsNumber); }}\n          >\n            <NumberInputField />\n            <NumberInputStepper>\n              <NumberIncrementStepper />\n              <NumberDecrementStepper />\n            </NumberInputStepper>\n          </NumberInput>\n        </Stack>\n        <Stack\n          spacing={4}\n          align=\"center\"\n          direction=\"row\"\n          justifyContent=\"center\"\n          padding=\"10px\"\n        >\n          <Button colorScheme=\"teal\" size=\"md\" variant=\"outline\" onClick={() => { dispatch(resetStore()); }}>\n            Отмена\n          </Button>\n          <Button\n            colorScheme=\"teal\"\n            size=\"md\"\n            variant=\"solid\"\n            onClick={() => { dispatch(setSizes(enteredSizeX, enteredSizeY)); }}\n          >\n            Рассчитать\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default SetSizesCard;\n","const settings = {\n  PRICE_CALCULATION_API: process.env.REACT_APP_BACKEND_URL,\n};\n\nexport default settings;\n","import { Box, Button, Stack } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetStore } from '../../../actions/actions';\n\nfunction SuccessCard() {\n  const { priceCalculationResult } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Box className=\"stepTitle\">\n        Результат расчета\n      </Box>\n      <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\">\n        <div className=\"appInnerCardQuestion\">Успешно</div>\n        <Box>{priceCalculationResult.message}</Box>\n        <Stack\n          spacing={4}\n          align=\"center\"\n          direction=\"row\"\n          justifyContent=\"center\"\n          padding=\"10px\"\n        >\n          <Button colorScheme=\"teal\" size=\"md\" variant=\"solid\" onClick={() => { dispatch(resetStore()); }}>\n            Новый расчет\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default SuccessCard;\n","import { Box, Button, Stack } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetStore } from '../../../actions/actions';\n\nfunction SuccessCard() {\n  const { priceCalculationResult } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Box className=\"stepTitle\">\n        Результат расчета\n      </Box>\n      <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\" color=\"#d43838\">\n        <div className=\"appInnerCardQuestion\">Ошибка</div>\n        <Box>{priceCalculationResult.message}</Box>\n        <Stack\n          spacing={4}\n          align=\"center\"\n          direction=\"row\"\n          justifyContent=\"center\"\n          padding=\"10px\"\n        >\n          <Button colorScheme=\"teal\" size=\"md\" variant=\"solid\" onClick={() => { dispatch(resetStore()); }}>\n            Новый расчет\n          </Button>\n        </Stack>\n      </Box>\n    </>\n  );\n}\n\nexport default SuccessCard;\n","import {\n  Box, Spinner,\n} from '@chakra-ui/react';\nimport React from 'react';\n\nfunction ResultWaitingCard() {\n  return (\n    <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\">\n      Подождите пожалуйста, производится расчет.\n      <Spinner size=\"lg\" />\n    </Box>\n  );\n}\n\nexport default ResultWaitingCard;\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport calculatePrice from './calculatePrice';\nimport SuccessCard from './SuccessCard/SuccessCard';\nimport FailCard from './FailCard/FailCard';\nimport ResultWaitingCard from './ResultWaitingCard/ResultWaitingCard';\n\nfunction PriceCalculationResult() {\n  const {\n    selectedBuilding,\n    selectedNumberOfFloors,\n    selectedMaterial,\n    wallSizeX,\n    wallSizeY,\n    priceCalculationResult,\n  } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  useEffect(() => {\n    dispatch(calculatePrice(selectedBuilding.id,\n      selectedNumberOfFloors,\n      selectedMaterial,\n      wallSizeX,\n      wallSizeY));\n  }, []);\n  if (priceCalculationResult === null) {\n    return <ResultWaitingCard />;\n  }\n  if (priceCalculationResult.result === 'error') {\n    return <FailCard />;\n  }\n  return <SuccessCard />;\n}\n\nexport default PriceCalculationResult;\n","import axios from 'axios';\nimport { priceCalculationFail, priceCalculationSuccess } from '../../actions/actions';\nimport settings from '../../settings';\n\nexport default function calculatePrice(building, height, material, sizeX, sizeY) {\n  return async (dispatch) => {\n    try {\n      const response = await axios.get(`${settings.PRICE_CALCULATION_API}lab/json/?building=${building}&height=${height}&material=${material}&sizex=${sizeX}&sizey=${sizeY}`);\n      dispatch(priceCalculationSuccess(response.data));\n    } catch (error) {\n      dispatch(priceCalculationFail(error));\n    }\n  };\n}\n","import { Box, Button } from '@chakra-ui/react';\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { resetStore } from '../../actions/actions';\n\nfunction ErrorResponseCard() {\n  const { priceCalculationFail } = useSelector((state) => state);\n  const dispatch = useDispatch();\n  return (\n    <>\n      <Box className=\"stepTitle\">\n        Неудачный запрос\n      </Box>\n      <Box className=\"appInnerCard\" borderWidth=\"2px\" borderRadius=\"lg\" color=\"#d43838\">\n        {priceCalculationFail.message}\n      </Box>\n      <Button colorScheme=\"teal\" size=\"md\" variant=\"solid\" onClick={() => { dispatch(resetStore()); }}>\n        Новый расчет\n      </Button>\n    </>\n  );\n}\n\nexport default ErrorResponseCard;\n","import {\n  Container, Box, Spinner, useColorMode,\n} from '@chakra-ui/react';\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport { APP_STATES } from '../../models';\n\nimport BuildingSelection from '../BuildingSelection/BuildingSelection';\nimport SetHeightCard from '../SetHeightCard/SetHeightCard';\nimport './App.sass';\nimport SelectMaterialCard from '../SelectMaterialCard/SelectMaterialCard';\nimport SetSizesCard from '../SetSizesCard/SetSizesCard';\nimport PriceCalculationResult from '../PriceCalculationResu;t/PriceCalculationResult';\nimport ErrorResponseCard from '../ErrorResponseCard/ErrorResponseCard';\n\nfunction getRequiredCard(appStep) {\n  switch (appStep) {\n    case APP_STATES.BUILDING_SELECTION:\n      return <BuildingSelection />;\n    case APP_STATES.HEIGHT_SETTING:\n      return <SetHeightCard />;\n    case APP_STATES.MATERIAL_SELECTION:\n      return <SelectMaterialCard />;\n    case APP_STATES.SIZES_SETTING:\n      return <SetSizesCard />;\n    case APP_STATES.CALCULATION_RESULT:\n      return <PriceCalculationResult />;\n    case APP_STATES.PRICE_CALCULATION_FAIL:\n      return <ErrorResponseCard />;\n    default:\n      return <Spinner />;\n  }\n}\n\nfunction App() {\n  const { colorMode, toggleColorMode } = useColorMode();\n  const { step } = useSelector((state) => state);\n  if (colorMode === 'light') {\n    toggleColorMode();\n  }\n  return (\n    <div className=\"App\">\n      <Container>\n        <Box maxW=\"md\" className=\"appCard\" borderWidth=\"3px\" borderRadius=\"lg\">\n          <Box className=\"appCardTitle\">\n            <b>Калькулятор цены конструкций</b>\n          </Box>\n          {getRequiredCard(step)}\n        </Box>\n      </Container>\n    </div>\n  );\n}\n\nexport default App;\n","import { ACTION_NAMES } from '../actions/actions';\nimport { APP_STATES } from '../models';\n\nconst initialState = {\n  selectedBuilding: null,\n  selectedMaterial: null,\n  selectedNumberOfFloors: null,\n  wallSizeX: null,\n  wallSizeY: null,\n  priceCalculationResult: null,\n  priceCalculationFail: null,\n  step: APP_STATES.BUILDING_SELECTION,\n  stepNumber: 1,\n};\n\nexport default function rootReducer(state = initialState, action) {\n  switch (action.type) {\n    case ACTION_NAMES.SELECT_LIVING_HOUSE:\n      return {\n        ...state,\n        selectedBuilding: action.building,\n        step: APP_STATES.HEIGHT_SETTING,\n        stepNumber: state.stepNumber + 1,\n      };\n    case ACTION_NAMES.SELECT_GARAGE:\n      return {\n        ...state,\n        selectedBuilding: action.building,\n        selectedNumberOfFloors: 1,\n        step: APP_STATES.MATERIAL_SELECTION,\n        stepNumber: state.stepNumber + 1,\n      };\n    case ACTION_NAMES.SET_HEIGHT:\n      return {\n        ...state,\n        selectedNumberOfFloors: action.payload,\n        step: APP_STATES.MATERIAL_SELECTION,\n        stepNumber: state.stepNumber + 1,\n      };\n    case ACTION_NAMES.SELECT_MATERIAL:\n      return {\n        ...state,\n        selectedMaterial: action.payload,\n        step: APP_STATES.SIZES_SETTING,\n        stepNumber: state.stepNumber + 1,\n      };\n    case ACTION_NAMES.SET_SIZES:\n      return {\n        ...state,\n        wallSizeX: action.sizeX,\n        wallSizeY: action.sizeY,\n        step: APP_STATES.CALCULATION_RESULT,\n      };\n    case ACTION_NAMES.PRICE_CALCULATION_SUCCESS:\n      return {\n        ...state,\n        priceCalculationResult: action.payload,\n      };\n    case ACTION_NAMES.PRICE_CALCULATION_FAIL:\n      return {\n        ...state,\n        priceCalculationFail: action.payload,\n        step: APP_STATES.PRICE_CALCULATION_FAIL,\n      };\n    case ACTION_NAMES.RESET_STORE:\n      return initialState;\n    default:\n      return state;\n  }\n}\n","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from '../reducers';\n\nconst store = createStore(\n  rootReducer,\n  applyMiddleware(thunk),\n);\n\nexport default store;\n","import { ChakraProvider } from '@chakra-ui/react';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\n\nimport App from './components/App/App';\nimport './index.css';\nimport store from './store/configureStore';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <ChakraProvider>\n        <App />\n      </ChakraProvider>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}